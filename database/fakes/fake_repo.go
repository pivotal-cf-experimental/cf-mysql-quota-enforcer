// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf-experimental/cf-mysql-quota-enforcer/database"
)

type FakeRepo struct {
	AllStub        func() ([]database.Database, error)
	allMutex       sync.RWMutex
	allArgsForCall []struct{}
	allReturns struct {
		result1 []database.Database
		result2 error
	}
}

func (fake *FakeRepo) All() ([]database.Database, error) {
	fake.allMutex.Lock()
	fake.allArgsForCall = append(fake.allArgsForCall, struct{}{})
	fake.allMutex.Unlock()
	if fake.AllStub != nil {
		return fake.AllStub()
	} else {
		return fake.allReturns.result1, fake.allReturns.result2
	}
}

func (fake *FakeRepo) AllCallCount() int {
	fake.allMutex.RLock()
	defer fake.allMutex.RUnlock()
	return len(fake.allArgsForCall)
}

func (fake *FakeRepo) AllReturns(result1 []database.Database, result2 error) {
	fake.AllStub = nil
	fake.allReturns = struct {
		result1 []database.Database
		result2 error
	}{result1, result2}
}

var _ database.Repo = new(FakeRepo)
